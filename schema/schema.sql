CREATE DATABASE catalog_of_things;

CREATE TABLE Label(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title   VARCHAR(100),
    color   VARCHAR(100)
);

CREATE TABLE Genre(
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name VARCHAR(100)
);

CREATE TABLE Author(
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    first_name VARCHAR(100),
    last_name VARCHAR(100)
);

CREATE TABLE Book(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_id      INTEGER,
  author_id     INTEGER,
  author_id     INTEGER,
  publish_date  DATE,
  archived      BOOLEAN,
  publisher     VARCHAR(250),
  cover_state   VARCHAR(4),

  FOREIGN KEY (genre_id) REFERENCES Genre(id)
  FOREIGN KEY (author_id) REFERENCES Author(id)
  FOREIGN KEY (label_id) REFERENCES Label(id)
);

CREATE TABLE MusicAlbum(
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    genre_id      INT,
    author_id     INT,
    label_id      INT,
    publish_date  DATE,
    archived      BOOLEAN,
    on_spotify VARCHAR(100),
    name VARCHAR(100),

    CONSTRAINT fk_genre_id
        FOREIGN KEY(genre_id)
            REFERENCES Genre(id),

    CONSTRAINT fk_author_id
        FOREIGN KEY(author_id)
            REFERENCES Author(id),

    CONSTRAINT fk_label_id
        FOREIGN KEY(label_id)
            REFERENCES Label(id)
);

CREATE TABLE Game(
  id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_id       INTEGER,
  author_id      INTEGER,
  publish_date   DATE,
  archived       BOOLEAN,
  multiplayer    VARCHAR(3)
  last_played_at DATE,

  FOREIGN KEY (genre_id) REFERENCES Genre(id)
  FOREIGN KEY (author_id) REFERENCES Author(id)
  FOREIGN KEY (label_id) REFERENCES Label(id)
);
