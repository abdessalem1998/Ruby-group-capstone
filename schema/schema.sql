CREATE DATABASE catalog_of_my_things;

CREATE TABLE genres (
	id  INT GENERATED ALWAYS AS IDENTITY,
	name VARCHAR(100),
	PRIMARY KEY(id)
);

CREATE TABLE Author(
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    first_name VARCHAR(100),
    last_name VARCHAR(100)
);

CREATE TABLE Label(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title   VARCHAR(100),
    color   VARCHAR(100)
);

CREATE TABLE Book(
  id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_id      INTEGER,
  author_id     INTEGER,
  author_id     INTEGER,
  publish_date  DATE,
  archived      BOOLEAN,
  publisher     VARCHAR(250),
  cover_state   VARCHAR(4),

  FOREIGN KEY (genre_id) REFERENCES Genre(id)
  FOREIGN KEY (author_id) REFERENCES Author(id)
  FOREIGN KEY (label_id) REFERENCES Label(id)
);

CREATE TABLE item (
	id  INT GENERATED ALWAYS AS IDENTITY,
  publish_date DATE,
	genre_id INT,
	author_id INT,
	label_id INT,
	archived BOOLEAN,
	PRIMARY KEY(id),
	FOREIGN KEY (genre_id) REFERENCES genres (id),
	FOREIGN KEY (author_id) REFERENCES author (id),
	FOREIGN KEY (label_id) REFERENCES labels (id)
);

CREATE TABLE music_albums (
	id  INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
	name VARCHAR(100),
	on_spotify BOOLEAN,
	FOREIGN KEY(id) REFERENCES item(id)
);

CREATE TABLE Game(
  id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  genre_id       INTEGER,
  author_id      INTEGER,
  publish_date   DATE,
  archived       BOOLEAN,
  multiplayer    VARCHAR(3)
  last_played_at DATE,

  FOREIGN KEY (genre_id) REFERENCES Genre(id)
  FOREIGN KEY (author_id) REFERENCES Author(id)
  FOREIGN KEY (label_id) REFERENCES Label(id)
  